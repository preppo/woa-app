name: Docker

on:
    push:
        branches:
            - "master"
        tags:
            - "*"
        paths-ignore:
            - ".github/**"
            - "!.github/workflows/docker.yml"
            - "!.github/workflows/preview_*.yml"
            - ".vscode/**"
            - ".gitignore"
            - ".gitlab-ci.yml"
            - "LICENSE"
            - "README"
    pull_request:
        branches:
            - "master"
        paths-ignore:
            - ".github/**"
            - "!.github/workflows/docker.yml"
            - "!.github/workflows/preview_*.yml"
            - ".vscode/**"
            - ".gitignore"
            - ".gitlab-ci.yml"
            - "LICENSE"
            - "README"
    workflow_dispatch:

jobs:
    publish:
        runs-on: ubuntu-latest
        if: github.event_name != 'pull_request'
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  submodules: "recursive"
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v3
              with:
                  images: revoltchat/client, ghcr.io/revoltchat/client
            - name: Login to DockerHub
              uses: docker/login-action@v1
              if: github.event_name != 'pull_request'
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Login to Github Container Registry
              uses: docker/login-action@v3
              if: github.event_name != 'pull_request'
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Build and publish
              uses: docker/build-push-action@v6
              with:
                  context: .
                  push: ${{ github.event_name != 'pull_request' }}
                  platforms: linux/amd64
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
